{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeView.js","components/AboutView.js","components/SearchView.js","components/MovieView.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","searchText","setSearchText","history","useHistory","updateSearchText","e","preventDefault","push","target","value","className","id","to","type","tabIndex","onSubmit","placeholder","onChange","Hero","text","backdrop","style","backgroundImage","HomeView","AboutView","href","MovieCard","movie","posterUrl","poster_path","detailUrl","genericPoster","process","RenderPoster","src","alt","original_title","SearchView","keyword","searchResults","title","resultsHtml","map","obj","i","RenderSearchResult","noResults","length","opacity","MovieView","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useEffect","console","log","fetch","then","response","json","data","posterPath","backdropUrl","backdrop_path","overview","status","release_date","vote_average","renderMovieDetails","NotFound","class","App","setSearchResults","results","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c57f6fde.chunk.js","sourcesContent":["import { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ searchText, setSearchText }) => {\r\n  const history = useHistory();\r\n\r\n  const updateSearchText = (e) => {\r\n    e.preventDefault()\r\n    history.push('/search')\r\n    setSearchText(e.target.value)\r\n    }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link id=\"nav-link\" className=\"navbar-brand\" to=\"/\">\r\n          Browzie\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link disabled\"\r\n                to=\"/\"\r\n                tabIndex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                Coming Soon\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form onSubmit={updateSearchText} className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              value={searchText}\r\n              onChange={updateSearchText}\r\n            />\r\n            <button \r\n            className=\"btn btn-outline-success\" \r\n            type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Hero = ({ text, backdrop }) => {\r\n    return (\r\n      <header className=\"text-white p-5 hero-container\">\r\n        <h1 className=\"hero-text\">{text}</h1>\r\n        {backdrop &&\r\n          <div className=\"hero-backdrop\" style={{backgroundImage: `url(${backdrop})`}}></div>\r\n        }\r\n      </header>\r\n    )\r\n  }\r\n\r\n  export default Hero;","import Hero from './Hero';\r\n\r\nconst HomeView = () => {\r\n    return (\r\n      <>\r\n        <Hero text=\"Welcome to Browzie\" />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2 my-5\">\r\n              <p className=\"lead\">Browzie is an easy to use web app for searching movie titles! Start typing in the name of a movie and Browzie will do the rest. Click on a title for additional information, such as release status, release date, and average rating.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default HomeView;","import Hero from './Hero';\r\n\r\nconst AboutView = () => {\r\n    return (\r\n      <>\r\n        <Hero text=\"About Us\" />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2 my-5\">\r\n              <p className=\"lead\">Browzie is an app built with ReactJS for searching movie titles. Originally it was Movie Browser, the React 201 project from Kalob Taulien's developer course, which you can <a href=\"https://www.udemy.com/course/the-ultimate-fullstack-web-development-bootcamp/\">find on Udemy</a>.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default AboutView;","import Hero from './Hero';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n  const detailUrl = `/movies/${movie.id}`\r\n  const genericPoster =\r\n  `${process.env.PUBLIC_URL}/assets/NoImage.jpg`\r\n\r\n  function RenderPoster() {\r\n      if (movie.poster_path == null) {\r\n        return (\r\n          <img\r\n            src={genericPoster}\r\n            className='card-img-top my-5 py-2 mh-100'\r\n            alt={movie.original_title}\r\n            \r\n          />\r\n        )\r\n      } else {\r\n        return (\r\n          <img\r\n            src={posterUrl}\r\n            className='card-img-top mh-100'\r\n            alt={movie.original_title}\r\n          />\r\n        );\r\n      }\r\n    \r\n      }\r\n    \r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-4 col-6 my-4\">\r\n      <div className=\"card\">\r\n      <RenderPoster />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{movie.original_title}</h5>\r\n          <Link to={detailUrl} className=\"btn btn-success\">Show Details</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SearchView = ({ keyword, searchResults }) => {\r\n  const title = `You are searching for...${keyword}`\r\n\r\n  const resultsHtml = searchResults.map((obj, i) => {\r\n    return <MovieCard movie={obj} key={i} />\r\n  })\r\n\r\n  const RenderSearchResult = () => {\r\n    let noResults = `${process.env.PUBLIC_URL}/assets/NoResults.png`\r\n\t\tif (searchResults.length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className='row'>{resultsHtml}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<h3 className=\"text-center mt-5\">\r\n\t\t\t\t\t\tOops, looks like there's nothing here!\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<img src={noResults} \r\n          className= \"w-50 img-fluid rounded mx-auto d-block mt-5\" style={{opacity: \"0.8\"}} alt=\"...\" />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n  return (\r\n    <>\r\n      <Hero text={title} />\r\n      <RenderSearchResult />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchView;\r\n","import Hero from \"./Hero\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst MovieView = () => {\r\n    const { id } = useParams();\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(\"make an api request\", id);\r\n        fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=9cb6379847968c53798b890eb3898f8d&language=en-US`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setMovieDetails(data);\r\n                setIsLoading(false);\r\n            });\r\n    }, [id]);\r\n\r\n\r\n    function renderMovieDetails() {\r\n        if (isLoading) {\r\n            return <Hero text=\"Loading...\" />;\r\n        }\r\n        if (movieDetails) {\r\n            const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\r\n            const backdropUrl = `https://image.tmdb.org/t/p/original/${movieDetails.backdrop_path}`;\r\n            const genericPoster =\r\n            `${process.env.PUBLIC_URL}/assets/NoImage.jpg`;\r\n\r\n\r\n            return (\r\n                <>\r\n                    <Hero text={movieDetails.original_title} backdrop={backdropUrl} />\r\n\r\n                    <div className=\"container my-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                {movieDetails.poster_path == null ? (\r\n                                    <img\r\n                                        src={genericPoster}\r\n                                        alt='...'\r\n                                        className='img-fluid shadow rounded'\r\n                                    />\r\n                                ) : (\r\n                                    <img\r\n                                        src={posterPath}\r\n                                        alt='...'\r\n                                        className='img-fluid shadow rounded'\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <h2>{movieDetails.original_title}</h2>\r\n                                <p className=\"lead\">{movieDetails.overview}</p>\r\n                                <p className=\"lead\">Release Status: {movieDetails.status}</p>\r\n                                <p className=\"lead\">Release Date: {movieDetails.release_date}</p>\r\n                                <p className=\"lead\">Average Rating: {movieDetails.vote_average}</p>\r\n                                {/* <p className=\"lead\">{movieDetails.belongs_to_collection}</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return renderMovieDetails();\r\n};\r\n\r\nexport default MovieView;","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"body-404\">\r\n                <section class=\"notFound\">\r\n                    <div class=\"img\">\r\n                        <img src=\"https://assets.codepen.io/5647096/backToTheHomepage.png\" alt=\"Back to the search page\" />\r\n                        <img src=\"https://assets.codepen.io/5647096/Delorean.png\" alt=\"Delorean and Marti McFly\" />\r\n                    </div>\r\n                    <div class=\"text\">\r\n                        <h1>404</h1>\r\n                        <h2>PAGE NOT FOUND</h2>\r\n                        <h3>BACK TO SEARCH?</h3>\r\n                        <a href=\"/search\" class=\"yes\">YES</a>\r\n                        <a href=\"https://www.youtube.com/watch?v=G3AfIvJBcGo\">NO</a>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import './App.css';\nimport Navbar from './components/Navbar';\nimport HomeView from './components/HomeView';\nimport AboutView from './components/AboutView';\nimport SearchView from './components/SearchView';\nimport MovieView from './components/MovieView';\nimport NotFound from './components/NotFound';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n\nfunction App() {\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (searchText) {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=9cb6379847968c53798b890eb3898f8d&language=en-US&query=${searchText}&page=1&include_adult=false`)\n        .then(response => response.json())\n        .then(data => {\n          setSearchResults(data.results)\n        })\n    }\n  }, [searchText])\n\n\n\n  return (\n    <>\n      <Navbar searchText={searchText} setSearchText={setSearchText} />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeView />\n        </Route>\n        <Route path=\"/about\" component={AboutView} />\n        <Route path=\"/search\">\n          <SearchView keyword={searchText} searchResults={searchResults} />\n        </Route>\n        <Route path=\"/movies/:id\" component={MovieView} />\n        <Route path=\"\" component={NotFound} />\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}