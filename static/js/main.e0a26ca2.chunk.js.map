{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeView.js","components/AboutView.js","components/SearchView.js","components/MovieView.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","searchText","setSearchText","history","useHistory","updateSearchText","e","preventDefault","push","target","value","Navbar","bg","variant","expand","Brand","id","href","Toggle","Collapse","Nav","className","style","maxHeight","navbarScroll","Link","disabled","Form","onSubmit","FormControl","type","placeholder","onChange","Button","Hero","text","backdrop","backgroundImage","HomeView","AboutView","MovieCard","movie","posterUrl","poster_path","detailUrl","genericPoster","process","RenderPoster","src","alt","original_title","to","SearchView","keyword","searchResults","title","resultsHtml","map","obj","i","RenderSearchResult","noResults","length","opacity","MovieView","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useEffect","console","log","fetch","then","response","json","data","posterPath","backdropUrl","backdrop_path","overview","status","release_date","vote_average","renderMovieDetails","NotFound","class","App","setSearchResults","results","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0a26ca2.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nimport { Nav, Navbar, Form, Button, FormControl } from 'react-bootstrap';\r\n\r\nconst Navigation = ({ searchText, setSearchText }) => {\r\n  const history = useHistory();\r\n\r\n  const updateSearchText = (e) => {\r\n    e.preventDefault()\r\n    history.push('/search')\r\n    setSearchText(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\r\n        <Navbar.Brand id=\"navbar-brand\" href=\"https://javahollow.github.io/browzie/#/\">Browzie</Navbar.Brand>\r\n        <Navbar.Toggle id=\"nav-icon\" aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav\r\n            className=\"mr-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: '100px' }}\r\n            navbarScroll\r\n          >\r\n            <Nav.Link href=\"https://javahollow.github.io/browzie/#/about\">About</Nav.Link>\r\n            <Nav.Link href=\"#\" disabled>\r\n              Coming Soon\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Form onSubmit={updateSearchText} className=\"d-flex ms-auto\" id=\"form\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n              value={searchText}\r\n              onChange={updateSearchText}\r\n            />\r\n            <Button\r\n              variant=\"outline-success\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n\r\n};\r\n\r\nexport default Navigation;\r\n","const Hero = ({ text, backdrop }) => {\r\n    return (\r\n      <header className=\"text-white p-5 hero-container\">\r\n        <h1 className=\"hero-text\">{text}</h1>\r\n        {backdrop &&\r\n          <div className=\"hero-backdrop\" style={{backgroundImage: `url(${backdrop})`}}></div>\r\n        }\r\n      </header>\r\n    )\r\n  }\r\n\r\n  export default Hero;","import Hero from './Hero';\r\n\r\nconst HomeView = () => {\r\n    return (\r\n      <>\r\n        <Hero text=\"Welcome to Browzie\" />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2 my-5\">\r\n              <p className=\"lead\">Browzie is an easy to use web app for searching movie titles! Start typing in the name of a movie and Browzie will do the rest. Click on a title for additional information, such as release status, release date, and average rating.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default HomeView;","import Hero from './Hero';\r\n\r\nconst AboutView = () => {\r\n    return (\r\n      <>\r\n        <Hero text=\"About Us\" />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8 offset-lg-2 my-5\">\r\n              <p className=\"lead\">Browzie is an app built with ReactJS for searching movie titles. Originally it was Movie Browser, the React 201 project from Kalob Taulien's developer course, which you can <a href=\"https://www.udemy.com/course/the-ultimate-fullstack-web-development-bootcamp/\">find on Udemy</a>.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default AboutView;","import Hero from './Hero';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n  const detailUrl = `/movies/${movie.id}`\r\n  const genericPoster =\r\n    `${process.env.PUBLIC_URL}/assets/NoImage.jpg`\r\n\r\n  function RenderPoster() {\r\n    if (movie.poster_path == null) {\r\n      return (\r\n        <img\r\n          src={genericPoster}\r\n          className='card-img-top my-5 py-2 mh-100'\r\n          alt={movie.original_title}\r\n\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <img\r\n          src={posterUrl}\r\n          className='card-img-top mh-100'\r\n          alt={movie.original_title}\r\n        />\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-4 col-6 my-4\">\r\n      <div className=\"card\">\r\n        <RenderPoster />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{movie.original_title}</h5>\r\n          <Link to={detailUrl} className=\"btn btn-success\">Show Details</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SearchView = ({ keyword, searchResults }) => {\r\n  const title = `You are searching for...${keyword}`\r\n\r\n  const resultsHtml = searchResults.map((obj, i) => {\r\n    return <MovieCard movie={obj} key={i} />\r\n  })\r\n\r\n  const RenderSearchResult = () => {\r\n    let noResults = `${process.env.PUBLIC_URL}/assets/NoResults.png`\r\n    if (searchResults.length > 0) {\r\n      return (\r\n        <div className='container'>\r\n          <div className='row'>{resultsHtml}</div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <h3 className=\"text-center mt-5\">\r\n            Oops, looks like there's nothing here!\r\n          </h3>\r\n          <img src={noResults}\r\n            className=\"w-50 img-fluid rounded mx-auto d-block mt-5\" style={{ opacity: \"0.8\" }} alt=\"...\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Hero text={title} />\r\n      <RenderSearchResult />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchView;\r\n","import Hero from \"./Hero\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst MovieView = () => {\r\n    const { id } = useParams();\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(\"make an api request\", id);\r\n        fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=9cb6379847968c53798b890eb3898f8d&language=en-US`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setMovieDetails(data);\r\n                setIsLoading(false);\r\n            });\r\n    }, [id]);\r\n\r\n\r\n    function renderMovieDetails() {\r\n        if (isLoading) {\r\n            return <Hero text=\"Loading...\" />;\r\n        }\r\n        if (movieDetails) {\r\n            const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\r\n            const backdropUrl = `https://image.tmdb.org/t/p/original/${movieDetails.backdrop_path}`;\r\n            const genericPoster =\r\n                `${process.env.PUBLIC_URL}/assets/NoImage.jpg`;\r\n\r\n\r\n            return (\r\n                <>\r\n                    <Hero text={movieDetails.original_title} backdrop={backdropUrl} />\r\n\r\n                    <div className=\"container my-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                {movieDetails.poster_path == null ? (\r\n                                    <img\r\n                                        src={genericPoster}\r\n                                        alt='...'\r\n                                        className='img-fluid shadow rounded'\r\n                                    />\r\n                                ) : (\r\n                                    <img\r\n                                        src={posterPath}\r\n                                        alt='...'\r\n                                        className='img-fluid shadow rounded'\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <h2>{movieDetails.original_title}</h2>\r\n                                <p className=\"lead\">{movieDetails.overview}</p>\r\n                                <p className=\"lead\">Release Status: {movieDetails.status}</p>\r\n                                <p className=\"lead\">Release Date: {movieDetails.release_date}</p>\r\n                                <p className=\"lead\">Average Rating: {movieDetails.vote_average}</p>\r\n                                {/* <p className=\"lead\">{movieDetails.belongs_to_collection}</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return renderMovieDetails();\r\n};\r\n\r\nexport default MovieView;","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"body-404\">\r\n                <section class=\"notFound\">\r\n                    <div class=\"img\">\r\n                        <img src=\"https://assets.codepen.io/5647096/backToTheHomepage.png\" alt=\"Back to the search page\" />\r\n                        <img src=\"https://assets.codepen.io/5647096/Delorean.png\" alt=\"Delorean and Marti McFly\" />\r\n                    </div>\r\n                    <div class=\"text\">\r\n                        <h1>404</h1>\r\n                        <h2>PAGE NOT FOUND</h2>\r\n                        <h3>BACK TO SEARCH?</h3>\r\n                        <a href=\"/search\" class=\"yes\">YES</a>\r\n                        <a href=\"https://www.youtube.com/watch?v=G3AfIvJBcGo\">NO</a>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import './App.css';\r\nimport Navigation from './components/Navbar';\r\nimport HomeView from './components/HomeView';\r\nimport AboutView from './components/AboutView';\r\nimport SearchView from './components/SearchView';\r\nimport MovieView from './components/MovieView';\r\nimport NotFound from './components/NotFound';\r\nimport { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (searchText) {\r\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=9cb6379847968c53798b890eb3898f8d&language=en-US&query=${searchText}&page=1&include_adult=false`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setSearchResults(data.results)\r\n        })\r\n    } \r\n  }, [searchText])\r\n\r\n\r\n\r\n  return (\r\n    // <HashRouter basename='/'>\r\n      <>\r\n        <Router basename=\"/browzie\">\r\n        <Navigation searchText={searchText} setSearchText={setSearchText} />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomeView />\r\n          </Route>\r\n          <Route path=\"/about\" component={AboutView} />\r\n          <Route path=\"/search\">\r\n            <SearchView keyword={searchText} searchResults={searchResults} />\r\n          </Route>\r\n          <Route path=\"/movies/:id\" component={MovieView} />\r\n          <Route path=\"\" component={NotFound} />\r\n        </Switch>\r\n        </Router>\r\n      </>\r\n    // </HashRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}